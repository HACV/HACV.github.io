(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{283:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),n("p",[t._v("记住,"),n("strong",[t._v("C语言")]),t._v("中的对象必须"),n("strong",[t._v("有且只有")]),t._v("一个定义， 但它可以有"),n("code",[t._v("多个exterm声明")]),t._v("。\nTips：顺便说一下，"),n("font",{staticStyle:{background:"yellow"}},[t._v("这里所说的对象跟C++中的对象并无关系")]),t._v("，这里的对象只是跟链接器有关的“东西”，比如函数和变量")],1),t._v(" "),n("p",[t._v("1)声明简单地说明了在其他地方创建的对象的名字，它允许你使用这个名字。\n2)定义是一种特殊的声明，它创建了一个对象;")]),t._v(" "),n("p",[t._v("声明的简单应用：比如在C++中")]),t._v(" "),t._m(3),t._m(4),t._v(" "),n("p",[t._v("让我们回顾一下这两个术语:")]),t._v(" "),n("blockquote",[t._m(5),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("1)只能出现在一个地方")]),t._v(" "),n("li",[t._v("2)"),n("strong",[t._v("确定对象的类型")]),t._v("并"),n("font",{staticStyle:{background:"yellow"}},[n("strong",[t._v("分配内存")])]),t._v("，用于创建新的对象。")],1),t._v(" "),t._m(6),t._v(" "),t._m(7)])]),t._v(" "),t._m(8),t._v(" "),t._m(9)]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),n("p",[t._v("声明变量的类型和名字，但不分配存储空间。\n定义也是声明（准确来说是“特殊的声明”，严格说，定义就是定义，这是许多人搞不清楚的地方）。")]),t._v(" "),n("p",[t._v("举例子：")]),t._v(" "),t._m(13),t._m(14),t._v(" "),n("p",[t._v("指明变量的类型和名字，为变量分配存储空间。\n另外补充一个概念"),n("font",{staticStyle:{background:"yellow"},attrs:{size:"5"}},[t._v("变量的初始化")]),t._v("，是指在变量的定义出"),n("strong",[t._v("给出值")]),t._v("。")],1),t._v(" "),n("p",[t._v("举例：")]),t._v(" "),t._m(15),t._m(16),t._v(" "),n("p",[t._v("简单的分辨：")]),t._v(" "),t._m(17),t._m(18),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),n("p",[t._v("简单的分辨：")]),t._v(" "),t._m(23),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._m(27),t._v(" "),t._m(28)])}),[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"辨析两组c语言概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#辨析两组c语言概念"}},[this._v("#")]),this._v(" 辨析两组C语言概念")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"一、声明和定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、声明和定义"}},[this._v("#")]),this._v(" 一、声明和定义")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("本处参考"),s("code",[this._v("《C专家编程》[美]Peter van der Linden")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-cpp line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//类B的声明，只是告诉编译器，我后面有定义这个类B，但是编译到这，暂时编译器不会给类B分配内存")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//前置声明")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//类A的定义，编译器编译到这要给类A分配内存")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("A")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("num")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\t\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//要是class B的前置声明,则使用不了下面的 B * _b;")]),t._v("\n\tB "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" _b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//若是定义该类型对象 B _b;则不行 ")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*PS：前置声明的类B只是一个不完全的类型，\n\t*具体原因是：编译器还未给类B分配内存\n\t*所以，我们只能用完全类型只能以有限方式使用,不能定义该类型的对象,\n\t*不完全类型只能用于定义指向该类型的指针及引用,或\n\t*者用于声明(而不是定义)使用该类型作为形参类型或返回类型的函数\n    *Reason：指针，我可以直接分配内存大小，而C++引用的底层也是指针实现的，也可以分配\n    *但是，定义对象，那要借助类B这个模具去生产一个对象，但是现在那个定义的模具分配多少内存\n    *至此暂时，不晓得，所以，不能用定义对象。\n\t*/")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//类B的定义，编译器编译到这才给类B分配内存")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("B")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_c")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("demo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("_c"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\t\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" _c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("具体的，本处，只是举个例子，想了解"),s("code",[this._v("C++")]),this._v("中前置声明的，可以去看下面两篇博客\n"),s("code",[this._v("https://blog.csdn.net/u010608296/article/details/102393543")]),this._v(" "),s("code",[this._v("https://www.cnblogs.com/lit10050528/p/3898835.html")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("定义：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("3)例如:"),s("code",[this._v("int my_array[100];")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("总的来说：定义相当于"),s("code",[this._v("特殊的声明")]),this._v(":它为对象分配内存。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("声明")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("blockquote",[n("ul",[n("li",[t._v("1)可以多次出现")]),t._v(" "),n("li",[t._v("2)"),n("strong",[t._v("描述对象的类型")]),t._v("，用于"),n("strong",[t._v("指代其他地方定义")]),t._v("的对象(例如在其他文件里)")]),t._v(" "),n("li",[t._v("3)例如:"),n("code",[t._v("extern int my_ array[];")]),t._v("//至于此处，为什么数字的长度信息可以省略，原因见后面")]),t._v(" "),n("li",[t._v("总的来说:声明相当于"),n("code",[t._v("普通的声明")]),t._v(":它所说明的并非自身，而是描述其他地方的创建的对象。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Reason:\n1）exterm对象声明告诉编译器对象的类型和名字，对象的内存分配则在别处进行。\n2）"),s("strong",[this._v("由于并未在声明中为数组分配内存，所以并不需要提供关于数组长度的信息。")]),this._v("\n3）对于多维数组，需要提供除最左边一维之外其他维的长度——这就给编译器足够的信息产生相应的代码。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_1）变量的声明和定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1）变量的声明和定义"}},[this._v("#")]),this._v(" 1）变量的声明和定义")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"变量的声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的声明"}},[this._v("#")]),this._v(" 变量的声明")])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-txt line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("int a;\n//准确说是定义，因为他它会分配内存，但是由于是“特殊的声明”\n//也有人混用说明是“声明”，额，见怪不怪、、、大家对一些东西的说法有出入，自行判断吧。\n\nextern int a;//纯粹的声明，毕竟不在这分配内存\nclass B;//纯粹的声明，不在这分配内存,这种写法是C++中的\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"变量的定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的定义"}},[this._v("#")]),this._v(" 变量的定义")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("int a;//纯粹的定义\nint a=3;//是定义，并且，由于在定义的时候你主动给出了值，还可以更加准确的叫“变量初始化”\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2）函数的声明和定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2）函数的声明和定义"}},[this._v("#")]),this._v(" 2）函数的声明和定义")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v(".h头文件中的\n//方法的声明\nvoid get(char *s);\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-txt line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(".c文件中的\n//方法的定义\nvoid get(char *s)\n{\n　　...\n　　return;\n}\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("ul",[s("li",[this._v("最终补充，翻译的时候的一些事情：\n定义：DEFINE\n声明，有时也作说明：DECLARE  //所以，翻译的人，要是统一了术语多好。。。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"二、接口和实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、接口和实现"}},[this._v("#")]),this._v(" 二、接口和实现")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("项目的开发过程中,我们需要使用到很多的"),s("strong",[this._v("功能模块")]),this._v("\n由于C语言的灵活性和自由性,若在编程时不遵循模块化编程思想,其代码的可读性将是一件令人头痛的问题。\n为了提高项目工程的可读性和可维护性,我们将采用模块化编程思想,")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("模块分为两个部分,即模块的"),s("strong",[this._v("接口")]),this._v("和"),s("strong",[this._v("实现")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("ul",[s("li",[this._v("在C语言中")])]),this._v(" "),s("blockquote",[s("ul",[s("li",[this._v("接口在"),s("code",[this._v("xxx.h")]),this._v("中")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("void get(char *s);\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("blockquote",[s("ul",[s("li",[this._v("1)预处理指令#include导入接口。")]),this._v(" "),s("li",[this._v("2)其实是为了在进行模块化编程的时候，你写的模块要调用别人哪个模块，那你直接看接口就会比看具体实现代码简洁，并且这样，别人也能不用给你实现源代码，更好的分工。此外，这还降低了模块之间的耦合性。")]),this._v(" "),s("li",[this._v("实现在"),s("code",[this._v("xxx.c")]),this._v("中")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("void get(char *s)\n{\n　　...\n　　return;\n}\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br"),s("span",{staticClass:"line-number"},[this._v("4")]),s("br"),s("span",{staticClass:"line-number"},[this._v("5")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("blockquote",[s("ul",[s("li",[this._v("1)一个接口可以有多个实现。只要实现遵循接口的规定，完全可以在不影响应用程序的情况下改变实现。所以，我们现实生活中，某个公司需要一些公司竞标做模块，才成为了可能！")]),this._v(" "),s("li",[this._v("2）在C语言中，一个实现通过"),s("code",[this._v("一个或多个.c文件")]),this._v("来提供。实现必须提供其导出的接口规定的功能，"),s("code",[this._v("实现会包含接口的.h文件")]),this._v("，以确保其定义与接口的声明一致。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("最后的Tips：\n在面向对象的语言中，比如"),s("code",[this._v("C++和Java")]),this._v(" "),s("strong",[this._v("一个抽象数据类型（ADT）是一个接口")]),this._v("，它定义了一个数据类型和对该类型的值所进行的操作。")])}],!1,null,null,null);s.default=e.exports}}]);
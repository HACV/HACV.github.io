(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{281:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),a("ul",[t._m(6),t._v(" "),a("li",[a("strong",[t._v("重定义")]),t._v("：也叫做隐藏，子类"),a("strong",[t._v("重新定义")]),t._v("父类中有相同名称的"),a("font",{staticStyle:{background:"yellow"}},[t._v("『"),a("strong",[t._v("非虚函数")]),t._v("』 ")]),t._v("( 参数列表可以不同 ) ，指派生类的函数屏蔽了与其同名的基类函数。可以理解成发生在继承中的重载。")],1),t._v(" "),a("li",[a("strong",[t._v("重写(Override)")]),t._v("：也叫做"),a("strong",[t._v("覆盖")]),t._v("，也叫"),a("strong",[t._v("复写")]),t._v("，一般发生在子类和父类继承关系之间。子类"),a("strong",[t._v("重新定义")]),t._v("父类中有相同名称和参数的"),a("font",{staticStyle:{background:"yellow"}},[t._v("『"),a("strong",[t._v("虚函数")]),t._v("』")]),t._v("。")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("参考："),a("a",{attrs:{href:"https://blog.csdn.net/u010275850/article/details/45583705",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++_重载、重写和重定义的区别"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("PS：但是，从很多英语教材上面，来说，重定义和重写都是单词（override），理解参考第4节")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._m(11),t._v(" "),a("p",[t._v("子类重新定义父类虚函数的方法叫做覆写")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._v(" "),a("blockquote",[a("p",[t._v("第2点，参考自用户讨论：@"),a("a",{attrs:{href:"https://www.nowcoder.com/profile/2887214",target:"_blank",rel:"noopener noreferrer"}},[t._v("牛客2887214号"),a("OutboundLink")],1)])]),t._v(" "),t._m(30),t._m(31),t._v(" "),a("blockquote",[a("p",[t._v("我的"),a("a",{attrs:{href:"http://naotu.baidu.com/file/02d2413a51829d0c29226a23718613ad?token=d83f2eb1c2d887a6",target:"_blank",rel:"noopener noreferrer"}},[t._v("百度脑图"),a("OutboundLink")],1)]),t._v(" "),t._m(32)]),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),a("blockquote",[a("p",[t._v("参考自：菜鸟教程"),a("a",{attrs:{href:"https://www.runoob.com/cplusplus/cpp-friend-functions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++ 友元函数"),a("OutboundLink")],1)])]),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),a("blockquote",[a("p",[t._v("参考自："),a("a",{attrs:{href:"https://www.huaweicloud.com/articles/4637f3d11eb3fd9a38e017041e23e50a.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("华为云"),a("OutboundLink")],1)])]),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54),t._v(" "),a("p",[t._v("C语言由于某个强制类型转换出错了，我们需要查找所有代码中相应的强制类型转换，那么会很难寻找。比如：")]),t._v(" "),t._m(55),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._v(" "),t._m(60),t._v(" "),t._m(61),t._v(" "),a("blockquote",[t._m(62),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("静态类型转换，"),a("strong",[t._v("编译")]),t._v("的时c++编译器会做"),a("strong",[t._v("类型检查")]),t._v("，基本类型能转换但是"),a("font",{staticStyle:{background:"yellow"}},[a("strong",[t._v("不能转换指针类型")])])],1)])]),t._v(" "),t._m(63),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68)]),t._v(" "),t._m(69),t._v(" "),t._m(70),t._v(" "),t._m(71),t._v(" "),a("p",[t._v("代码展示")]),t._v(" "),t._m(72),t._m(73),t._v(" "),t._m(74),t._v(" "),t._m(75),t._m(76),t._v(" "),t._m(77),a("p",[t._v("运行结果是")]),t._v(" "),t._m(78),t._m(79),t._v(" "),t._m(80),t._v(" "),t._m(81),a("blockquote",[a("p",[t._v("参考："),a("a",{attrs:{href:"https://github.com/huihut/interview",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/huihut/interview"),a("OutboundLink")],1)])]),t._v(" "),t._m(82),t._v(" "),t._m(83),t._m(84),t._m(85),t._v(" "),t._m(86),t._v(" "),t._m(87),t._v(" "),t._m(88),t._v(" "),a("p",[t._v("智能指针是C++提供给我们的一种工具\n用来管理对象的一个生命周期的，简单来说就是来帮我们管理动态内存的")]),t._v(" "),t._m(89),t._v(" "),a("ul",[a("li",[t._v("1）auto_ptr（C++11已弃用，C++98版）")]),t._v(" "),a("li",[t._v("采用所有权模式")]),t._v(" "),a("li",[t._v("C++98的时候的方案，C++11已抛弃")]),t._v(" "),a("li",[t._v("2）unique_ptr")]),t._v(" "),a("li",[t._v("替换auto_ptr")]),t._v(" "),a("li",[t._v("3）shared_ptr（共享指针）")]),t._v(" "),a("li",[t._v("shared_ptr指针要是碰到，两个对象互相指向，导致“"),a("strong",[t._v("循环引用")]),t._v("”会导致“"),a("font",{staticStyle:{background:"yellow"}},[a("strong",[t._v("内存泄漏")])]),t._v("”")],1),t._v(" "),a("li",[t._v("4）weak_ptr（弱指针）")]),t._v(" "),a("li",[t._v("为了解决“循环引用”导致的“内存泄漏”，引入了weak_ptr指针。")])]),t._v(" "),t._m(90),t._v(" "),t._m(91),t._v(" "),t._m(92),t._v(" "),t._m(93),t._v(" "),t._m(94)])}),[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"c-核心基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-核心基础"}},[this._v("#")]),this._v(" C++核心基础")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"一、面向对象难点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、面向对象难点"}},[this._v("#")]),this._v(" 一、面向对象难点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("面向对象的三大基本特征：封装、继承、多态")]),this._v(" "),s("li",[this._v("面向对象的五大基本原则：")]),this._v(" "),s("li",[this._v("单一职责原则、开放封闭原则、里氏替换原则、依赖倒置原则、接口隔离原则")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（1）类型转换函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）类型转换函数"}},[this._v("#")]),this._v(" （1）类型转换函数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("带非默认参数的构造函数可以把基本类型数据转换成类类型对象。")])]),this._v(" "),s("li",[s("p",[this._v("类型转换函数可以把类类型对象转换为其他指定类型对象。")])]),this._v(" "),s("li",[s("p",[this._v("类型转换函数只能定义为一个类的成员函数，不能定义为类的友元函数。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"二、辨析：重写-override-与重载-overload-与重定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、辨析：重写-override-与重载-overload-与重定义"}},[this._v("#")]),this._v(" 二、辨析：重写(Override)与重载(Overload)与重定义")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("strong",[this._v("重载(Overload)")]),this._v("：函数名相同，函数的参数个数、参数类型或参数顺序三者中必须至少有一种不同。函数返回值的类型可以相同，也可以不相同。发生在一个类内部。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"三、多态与虚函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、多态与虚函数"}},[this._v("#")]),this._v(" 三、多态与虚函数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（1）虚函数相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）虚函数相关"}},[this._v("#")]),this._v(" （1）虚函数相关")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1、（static）静态函数不可以是虚函数")]),this._v(" "),s("li",[this._v("2、（inline）虚函数可以声明为inline，但是编译器不会将其作为inline函数处理")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("a")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n尽管以上写法是没有语法错误的，并且可以执行，但其实test函数已经不是内联函数了，因为"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("inline")]),t._v("只是对编译器的一个建议而已。\n搞清本质就好。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("多态是为了"),s("strong",[this._v("接口")]),this._v("重用，封装和继承是为了代码重用")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（2）虚函数能不能inline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（2）虚函数能不能inline"}},[this._v("#")]),this._v(" （2）虚函数能不能inline")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("Q:虚函数不能内联，但是语法不出错？\n\nA:不是的，虚函数在没有表现多态的时候是可以内联的，表现多态的时候不能\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("虚函数不可以内联，因为虚函数是在运行期的时候确定具体调用的函数，内联是在编译期的时候进行代码展开，两者冲突，所以没有一起使用的做法。")]),this._v(" "),s("li",[this._v("内联只是对编译器的一种请求，是否真正内联要看编译器的处理，虚函数是可以内联的，但是编译器不会响应内联请求，即他会忽略内联说明，将其当做普通虚函数处理。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("在C++中，为了让某个类只能通过new来创建（即如果直接创建对象，编译器将报错），应该")]),this._v("（）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("将析构函数设为私有")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（3）非多态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（3）非多态"}},[this._v("#")]),this._v(" （3）非多态")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<bits/stdc++.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mytest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AAA"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("B")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("A")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mytest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BBB"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\tA "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mytest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"三、『运算符重载』详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、『运算符重载』详解"}},[this._v("#")]),this._v(" 三、『运算符重载』详解")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("（本质还是函数重载）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（1）重载的2种函数类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）重载的2种函数类型"}},[this._v("#")]),this._v(" （1）重载的2种函数类型")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1、成员函数")]),this._v(" "),s("li",[this._v("2、友元函数『属于，非成员函数』")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("易错：有的运算符，只能重载为『成员函数』")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \t\t\t\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//重载，下标运算符，比如重载后，返回当前vetor中的元素，需要this指针，而非成员函数是没有this指针的233")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//重载，函数调用运算符，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n上面"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("个，『只能』通过成员函数进行重载\n我的理解，备注如上\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（2）可以重载，但建议不要重载的运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（2）可以重载，但建议不要重载的运算符"}},[this._v("#")]),this._v(" （2）可以重载，但建议不要重载的运算符")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("&&")]),this._v("和"),s("code",[this._v("||")]),this._v("很建议不要重载『会出点问题』")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、因为，重载运算符，也就意味着靠函数重载来完成，操作数会作为『函数参数，传递』\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、C"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("的『函数参数都会被求值，无法实现（短路规则）』\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（3）不能重载的5个运算符记忆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（3）不能重载的5个运算符记忆"}},[this._v("#")]),this._v(" （3）不能重载的5个运算符记忆")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("p",[t._v("百度招聘考过。")])]),t._v(" "),a("li",[a("p",[t._v("1、第1个，也是我们常常忘记是运算符的"),a("code",[t._v("sizeof")])])]),t._v(" "),a("li",[a("p",[t._v("2、其他4个，记住只要挂"),a("code",[t._v(".")]),t._v("的运算符"),a("strong",[t._v("均不能被重载")])])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("C"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("不能重载的总共五个：\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),t._v("（类成员访问运算符） \n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" .*"')]),t._v("（类成员指针访问运算符） \n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("）"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"::"')]),t._v("（域运算符） \n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("）"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"siezof"')]),t._v("（长度运算符） \n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("）"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" ?:"')]),t._v("（条件运算符）\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"四、类的成员函数和非成员函数分类『重要』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、类的成员函数和非成员函数分类『重要』"}},[this._v("#")]),this._v(" 四、类的成员函数和非成员函数分类『重要』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("说明：成员函数的分类，需要考虑排序组合，"),s("strong",[this._v("是很多，很复杂")]),this._v("的，不然就只能一个一个维度去分类。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_1、成员函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、成员函数"}},[this._v("#")]),this._v(" 1、成员函数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("成员函数分下面3类（应该说是2类，纯虚函数属于虚函数的子集的话）")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、非虚函数（non-virtual 函数）：\n你不希望派生类（derived class）重新定义 (override, 复写) 它.\n2、虚函数（virtual 函數）：\n你希望 derived class 重新定义 (override, 复写) 它，且你对它已有『默认』定义。\n3、纯虚函数（pure virtual 函數）：\n你希望 derived class 『一定』要重新定义 (override 复写)\n它，你对它沒有默认定义。\n\nPS：我们把不是纯的虚函数的虚函数叫作（impure virtual函数）\nPS：在语法上，我们只要在任何一个函数前面加上virtual这样一个关键字，它就成为一个虚函数。\n数据可以被继承下来，就是占它用了内存。\n函数的继承如何理解？但是不应该从内存角度理解，函数的继承，继承的是调用权利\n\nPS：其实纯虚函数是可以有定义的！！\n> 出处：《C++Primer》中文版第五版541页第22行。\n我们可以为纯虚函数提供定义，不过函数体『必须定义在类的外部』。若定义在类的内部，会出现错误：pure-specifier on function-definition。\n》 虚函数是可以定义『在类的内部的』，外部也可以！\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("参考自：侯捷")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("strong",[this._v("override")]),this._v("这个术语，在这个主题不能随便用！！")]),this._v(" "),s("li",[this._v("这个术语，"),s("strong",[this._v("一定是用在『虚函数』被重新定义，才能够叫（override）")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2、非成员函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、非成员函数"}},[this._v("#")]),this._v(" 2、非成员函数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"（1）友元函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）友元函数"}},[this._v("#")]),this._v(" （1）友元函数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("1、友元函数的『"),s("strong",[this._v("声明")]),this._v("』可以放在类"),s("strong",[this._v("声明")]),this._v("的任何地方，不受访问限定关键字private、protected、public的限制")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("2、尽管友元函数的"),s("strong",[this._v("原型")]),this._v("有在"),s("strong",[this._v("类的定义")]),this._v("中出现过，但是"),s("strong",[this._v("友元函数并不是成员函数")]),this._v("。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("3、友元是一种"),s("strong",[this._v("定义在类外部")]),this._v("的普通函数，但它需要在类体内进行"),s("strong",[this._v("说明『声明』")]),this._v("，为了与该类的成员函数加以区别，在说明时前面加以关键字friend")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"五、类的成员变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、类的成员变量"}},[this._v("#")]),this._v(" 五、类的成员变量")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（1）static成员变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）static成员变量"}},[this._v("#")]),this._v(" （1）static成员变量")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("c++的一个类中『"),s("strong",[this._v("声明")]),this._v("』一个static成员变量，static是加了访问控制的全局变量，不被继承")]),this._v(" "),s("li",[this._v("类和子类对象，static变量占有一份内存")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("重点理解："),s("strong",[this._v("静态成员变量的初始化一定要在『类外』")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("原因： 因为静态成员变量本身在main函数未开始时已经存在。不要让成员变量的初始化依赖于对象。不用对象，难到就不能用这一变量了吗？如果将初始化放在类内。那么"),s("strong",[this._v("当不声明对象时")]),this._v("，无法使用这一静态变量。编译器报错为‘undeclared identifier’")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("类中的声明和定义辨析：（重点、难点）\n笔者的看法是：\n1、逻辑上说明是一起，只能表示可以『声明』在一起。（声明的门槛很低）\n2、具体内存在哪分配，这个决定『能不能在类内』进行『定义』\n\n比如：\n1、友元函数在『类内』声明，不能在『类内』定义，能在『类外』定义\n2、static成员变量在『类内』声明，不能在『类内』定义，能在『类外』定义\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"六、无法继承的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、无法继承的"}},[this._v("#")]),this._v(" 六、无法继承的")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（1）static函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）static函数"}},[this._v("#")]),this._v(" （1）static函数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("原因：")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"七、c-中强制类型转换（type-cast）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、c-中强制类型转换（type-cast）"}},[this._v("#")]),this._v(" 七、C++中强制类型转换（Type Cast）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_1、背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、背景"}},[this._v("#")]),this._v(" 1、背景")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_1）场景1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1）场景1"}},[this._v("#")]),this._v(" 1）场景1")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("double num=6.3131;\nint solve=(int)num;\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("strong",[t._v("原因")]),t._v("：想要查找C语言风格的类型转换我们需要查找"),a("code",[t._v("（")]),t._v("这样的括号，但是函数也有啊"),a("br"),t._v(" "),a("strong",[t._v("解决")]),t._v("：C++中设计了4种类型转换，而且给他们每个后面都有单词cast"),a("br"),t._v("\n以后，我们快速定位类型转换，直接用"),a("code",[t._v("Ctrl+F")]),t._v("去寻找"),a("code",[t._v("cast")]),t._v("就好了")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_2）场景2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2）场景2"}},[this._v("#")]),this._v(" 2）场景2")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("原因")]),this._v("：由于C++中用基类和子类的指针，实现了多态。有时候，有些不熟悉多态的编码人员，可能会进行强制类型转换，导致项目崩溃。"),s("br"),this._v(" "),s("strong",[this._v("解决")]),this._v("：C++中针对这些，设计了比如"),s("code",[this._v("dynamic_cast")]),this._v("类型转换")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2、类型转换总览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、类型转换总览"}},[this._v("#")]),this._v(" 2、类型转换总览")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("C++相较C增加的"),s("strong",[this._v("新特性")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_1）c-中4种类型转换如下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1）c-中4种类型转换如下"}},[this._v("#")]),this._v(" 1）C++中4种类型转换如下")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("static_cast（静态类型转换）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("reinterpreter_cast（重新解释类型转换，interpreter，v.诠释，说明）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("ul",[s("li",[this._v("若不同类型之间，进行强制类型转换，用reinterpret_cast进行重新解释")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("dynamic_cast（动态类型转换）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("ul",[s("li",[this._v("C++中重要的，安全的基类和子类之间转换，"),s("strong",[this._v("运行时")]),this._v("类型检查")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("const_cast（常量类型准换）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("ul",[s("li",[this._v("去除变量的只读属性")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_2）一般结论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2）一般结论"}},[this._v("#")]),this._v(" 2）一般结论")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("1.C语言中能"),a("strong",[t._v("隐式类型转换")]),t._v("的，在c++中可用static_cast进行类型转换。因C++编译器在编译检查一般都能通过；")]),t._v(" "),a("li",[t._v("2.C语言中"),a("strong",[t._v("不能隐式类型转换的")]),t._v("，在c++中可以用reinterpret_cast进行强行类型解释。")]),t._v(" "),a("li",[t._v("3.总结：static_cast和reinterpret_cast基本上把C语言中的 强制类型转换给覆盖，但是"),a("strong",[t._v("reinterpret_cast很难保证移植性。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3、static-cast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、static-cast"}},[this._v("#")]),this._v(" 3、static_cast")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" pi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.1415926")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//c++的新式的类型转换运算符  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("pi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//“强制”类型转换 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//c语言/C++的“隐式”类型转换")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("静态的类型转换:  在"),s("strong",[this._v("编译")]),this._v("的时进行基本类型的转换 能替代c风格的类型转换，可以进行一部分检查")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_4、reinterpret-cast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、reinterpret-cast"}},[this._v("#")]),this._v(" 4、reinterpret_cast")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello wangbaoming "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//static_cast对于基本类型可以转换，但是不能转换指针类型！")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//编译的时候就会报错：[Error] invalid static_cast from type 'char*' to type 'int*'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以使用  reinterpret_cast 进行重新解释 ")]),t._v("\np2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("reinterpret_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_5、dynamic-cast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、dynamic-cast"}},[this._v("#")]),this._v(" 5、dynamic_cast")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<bits/stdc++.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("voice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")])]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("voice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"汪汪"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSwim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\t\t\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"狗游泳"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token base-clause"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("voice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"喵喵 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTree")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\t\t\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"猫爬树"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//另一个类群体 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Book")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" price"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" price "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对象运行 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ObjPlay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Animal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tbase"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("voice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//猫没有转换成功 ")]),t._v("\n\tDog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pDog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Dog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" pDog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpDog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("voice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tpDog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSwim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n\tCat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pCat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Cat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" pCat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpCat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("voice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tpCat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTree")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//基类指针base ")]),t._v("\n\tAnimal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("base "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1）可以把子类指针赋给 父类指针 但是反过来是不可以的 需要 如下转换")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//pdog = base;  ")]),t._v("\n\tDog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pDog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Dog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2）把base转换成其他 非动物相关的 err")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//比如下面这一行在编译时会出错！ ")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Book *book= static_cast<Book *> (base);")]),t._v("\n\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3  reinterpret_cast //可以强制类型转换")]),t._v("\n\tBook "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("book2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("reinterpret_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Book "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4 dynamic_cast用法")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ObjPlay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Cat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("system")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pause"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br"),a("span",{staticClass:"line-number"},[t._v("61")]),a("br"),a("span",{staticClass:"line-number"},[t._v("62")]),a("br"),a("span",{staticClass:"line-number"},[t._v("63")]),a("br"),a("span",{staticClass:"line-number"},[t._v("64")]),a("br"),a("span",{staticClass:"line-number"},[t._v("65")]),a("br"),a("span",{staticClass:"line-number"},[t._v("66")]),a("br"),a("span",{staticClass:"line-number"},[t._v("67")]),a("br"),a("span",{staticClass:"line-number"},[t._v("68")]),a("br"),a("span",{staticClass:"line-number"},[t._v("69")]),a("br"),a("span",{staticClass:"line-number"},[t._v("70")]),a("br"),a("span",{staticClass:"line-number"},[t._v("71")]),a("br"),a("span",{staticClass:"line-number"},[t._v("72")]),a("br"),a("span",{staticClass:"line-number"},[t._v("73")]),a("br"),a("span",{staticClass:"line-number"},[t._v("74")]),a("br"),a("span",{staticClass:"line-number"},[t._v("75")]),a("br"),a("span",{staticClass:"line-number"},[t._v("76")]),a("br"),a("span",{staticClass:"line-number"},[t._v("77")]),a("br"),a("span",{staticClass:"line-number"},[t._v("78")]),a("br"),a("span",{staticClass:"line-number"},[t._v("79")]),a("br"),a("span",{staticClass:"line-number"},[t._v("80")]),a("br"),a("span",{staticClass:"line-number"},[t._v("81")]),a("br"),a("span",{staticClass:"line-number"},[t._v("82")]),a("br"),a("span",{staticClass:"line-number"},[t._v("83")]),a("br"),a("span",{staticClass:"line-number"},[t._v("84")]),a("br"),a("span",{staticClass:"line-number"},[t._v("85")]),a("br"),a("span",{staticClass:"line-number"},[t._v("86")]),a("br"),a("span",{staticClass:"line-number"},[t._v("87")]),a("br"),a("span",{staticClass:"line-number"},[t._v("88")]),a("br"),a("span",{staticClass:"line-number"},[t._v("89")]),a("br"),a("span",{staticClass:"line-number"},[t._v("90")]),a("br"),a("span",{staticClass:"line-number"},[t._v("91")]),a("br"),a("span",{staticClass:"line-number"},[t._v("92")]),a("br"),a("span",{staticClass:"line-number"},[t._v("93")]),a("br"),a("span",{staticClass:"line-number"},[t._v("94")]),a("br"),a("span",{staticClass:"line-number"},[t._v("95")]),a("br"),a("span",{staticClass:"line-number"},[t._v("96")]),a("br"),a("span",{staticClass:"line-number"},[t._v("97")]),a("br"),a("span",{staticClass:"line-number"},[t._v("98")]),a("br"),a("span",{staticClass:"line-number"},[t._v("99")]),a("br"),a("span",{staticClass:"line-number"},[t._v("100")]),a("br"),a("span",{staticClass:"line-number"},[t._v("101")]),a("br"),a("span",{staticClass:"line-number"},[t._v("102")]),a("br"),a("span",{staticClass:"line-number"},[t._v("103")]),a("br"),a("span",{staticClass:"line-number"},[t._v("104")]),a("br"),a("span",{staticClass:"line-number"},[t._v("105")]),a("br"),a("span",{staticClass:"line-number"},[t._v("106")]),a("br"),a("span",{staticClass:"line-number"},[t._v("107")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("喵喵\n喵喵\n猫爬树\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"bad-cast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bad-cast"}},[this._v("#")]),this._v(" bad_cast")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("由于转换为『引用类型』失败，"),s("code",[this._v("dynamic_cast")]),this._v("运算符会引发"),s("code",[this._v("bad_cast")]),this._v("异常")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Circle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" ref_circle "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Circle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" ref_shape "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" bad_cast b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Caught:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("what")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_6、const-cast"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、const-cast"}},[this._v("#")]),this._v(" 6、const_cast")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<bits/stdc++.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//典型用法，把形参的只读属性去掉")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Opbuf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把形参的只读属性去掉 ")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tp2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11111111111"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"333333333"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//下面就是用法，虽然会显示")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[Warning] deprecated conversion from string constant to 'char*' [-Wwrite-strings] ")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const_cast")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//下面 "000000000000"会自动拆解，放入buf数组中 ')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"000000000000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Opbuf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//要保证指针所执行的内存空间能修改才行 若不能修改 还是会引起程序异常！！！")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//比如下面,因为下面的 "dddddddddddsssssssssssssss"存在常量区 ')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//注意和 char buf[100] = "000000000000";区别 ')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//\tOpbuf("dddddddddddsssssssssssssss");')]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("system")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pause"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("000000000000\nA00000000000\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_7、总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、总结"}},[this._v("#")]),this._v(" 7、总结")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("1）编码人员要清楚的知道: 要转的变量，类型转换前是什么类型，类型转换后是什么类型。转换后有什么后果。")]),this._v(" "),s("li",[this._v("2）一般情况下，不建议进行类型转换；避免进行类型转换。")]),this._v(" "),s("li",[this._v("比如上面的“把形参的只读属性去掉”，我在C语言编程的时候，本来就是怕别人写的模块修改我传入的参数才用的const，但是这种类型转换会破坏我设计的初衷！")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"八、4个智能指针『c-11』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、4个智能指针『c-11』"}},[this._v("#")]),this._v(" 八、4个智能指针『C++11』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_1、总览"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、总览"}},[this._v("#")]),this._v(" 1、总览")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2、4个智能指针（smart-pointer）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、4个智能指针（smart-pointer）"}},[this._v("#")]),this._v(" 2、4个智能指针（Smart pointer）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"九、刷题笔记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九、刷题笔记"}},[this._v("#")]),this._v(" 九、刷题笔记")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（1）可以将布尔值与整数进行比较吗-？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）可以将布尔值与整数进行比较吗-？"}},[this._v("#")]),this._v(" （1）可以将布尔值与整数进行比较吗 ？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Java不可以！")]),this._v(" "),s("li",[this._v("C++可以")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（2）继承和抽象类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（2）继承和抽象类"}},[this._v("#")]),this._v(" （2）继承和抽象类")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("类不可以多继承而接口可以多实现")]),this._v(" "),s("li",[this._v("抽象类和接口都不能被实例化")])])}],!1,null,null,null);s.default=e.exports}}]);
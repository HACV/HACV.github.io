(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{167:function(t,s,a){t.exports=a.p+"assets/img/01.牛客公开课.a6744e42.png"},168:function(t,s,a){t.exports=a.p+"assets/img/02.牛客公开课.8a7655a7.png"},194:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),n("img",{attrs:{src:a(167)}}),t._v(" "),n("p",[t._v("状态")]),t._v(" "),n("img",{attrs:{src:a(168)}}),t._v(" "),t._m(2),t._v(" "),n("ul",[t._m(3),t._v(" "),t._m(4),t._v(" "),n("li",[t._v("记忆方法："),n("br"),t._v(" "),n("font",{staticStyle:{background:"yellow"}},[t._v("大Boss（进程），只管拿着资源统筹兼顾。\n小兵（线程），要卖力执行命令。")])],1)]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),n("blockquote",[n("ul",[n("li",[n("font",{staticStyle:{background:"yellow"}},[t._v("Windows内核中有明确的"),n("b",[t._v("进程")]),t._v("和"),n("b",[t._v("线程")]),t._v("的概念")])],1)])]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),n("p",[t._v("inux下的线程创建、等待、获取线程 id")]),t._v(" "),t._m(21),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._m(26),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._m(35),t._v(" "),t._m(36),t._v(" "),n("blockquote",[n("p",[t._v("参考："),n("a",{attrs:{href:"https://blog.nowcoder.net/n/e26967a0bfa44ffb9836c0713412d4a7",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux C/C++ 后台开发实习生技能要求"),n("OutboundLink")],1)])]),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),n("ul",[n("li",[n("font",{staticStyle:{background:"yellow"},attrs:{type:"楷体",size:"5"}},[t._v("（1）信号量")])],1)]),t._v(" "),n("blockquote",[n("ul",[n("li",[n("font",{staticStyle:{background:"yellow"}},[n("b",[t._v("（严格程度：低）二元信号量（Binary Semaphore）")])]),t._v("是最简单的一种锁，它只有两种状态:占用与非占用。它适合只能被唯一个线程独占访问的资源。当二元信号量处于非占用状态时，第一个试图获取该二元信号量的线程会获得该锁，并将二元信号量置为占用状态，此后其他的所有试图获取该二元信号量的线程将会等待，直到该锁被释放。")],1),t._v(" "),t._m(39),t._v(" "),n("li",[t._v("将信号量的值减1。")]),t._v(" "),n("li",[t._v("如果信号量的值小于0，则进入等待状态，否则继续执行。")]),t._v(" "),n("li",[t._v("访问完资源之后，线程释放信号量，进行如下操作:")]),t._v(" "),n("li",[t._v("将信号量的值加1。")]),t._v(" "),n("li",[t._v("如果信号量的值小于1,唤醒-一个等待中的线程。")])])]),t._v(" "),n("ul",[n("li",[n("font",{staticStyle:{background:"yellow"}},[n("b",[t._v("（严格程度：中）互斥量（Mutex）")])]),t._v("和"),n("b",[t._v("二元信号量")]),t._v("很类似，资源仅同时允许一个线程访问，但和信号量不同的是:")],1)]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("1）"),n("b",[t._v("信号量")]),t._v("在整个系统可以被任意线程获取并释放，也就是说，同一个信号量可以被系统中的一个线程获取之后的"),n("font",{staticStyle:{background:"yellow"}},[t._v("另一个线程")]),t._v("释放。")],1),t._v(" "),t._m(40)])]),t._v(" "),n("ul",[n("li",[n("font",{staticStyle:{background:"yellow"}},[n("b",[t._v("（严格程度：高）临界区（Critical Section）")])]),t._v("是比"),n("b",[t._v("互斥量")]),t._v("更加严格的同步手段。")],1)]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("在术语中，把临界区的锁的获取称为进入临界区,而把锁的程放称为离开临界区。")]),t._v(" "),n("li",[t._v("临界区和互斥量与信号量的区别在于:")]),t._v(" "),n("li",[t._v("1）"),n("b",[t._v("互斥量和信号量")]),t._v("在系统的"),n("font",{staticStyle:{background:"yellow"}},[n("b",[t._v("任何进程")])]),t._v("里都是可见的，也就是说，一个进程创建了一个互斥量或信号量,另一个进程试图去获取该锁是合法的。")],1)]),t._v(" "),n("blockquote",[n("blockquote",[n("ul",[n("li",[t._v("2）"),n("b",[t._v("临界区")]),t._v("的作用范围"),n("font",{staticStyle:{background:"yellow"}},[n("b",[t._v("仅限于本进程")])]),t._v("，其他的进程无法获取该锁。除此之外，临界区具有和互斥量相同的性质。")],1)])])])]),t._v(" "),n("ul",[n("li",[n("font",{staticStyle:{background:"yellow"},attrs:{type:"楷体",size:"5"}},[t._v("（2）")]),n("font",{staticStyle:{background:"yellow"}},[n("b",[t._v("读写锁（Read-Write Lock）")])])],1)]),t._v(" "),t._m(41),t._v(" "),n("blockquote",[n("ul",[n("li",[n("font",{staticStyle:{background:"yellow"},attrs:{type:"楷体",size:"5"}},[t._v("（3）")]),n("font",{staticStyle:{background:"yellow"}},[n("b",[t._v("条件变量（Condition Variable）")])]),t._v(" 作为一种同步手段，作用类似于一个栅栏。")],1),t._v(" "),n("li",[t._v("对于条件变量，线程可以有两种操作，首先线程可以等待条件变量，一个条件变量可以被多个线程等待。")]),t._v(" "),n("li",[t._v("其次，线程可以唤醒条件变量,此时某个或所有等待此条件变量的线程都会被唤醒并继续支持。也就是说，使用条件变量可以让许多线程-起等待某个事件的发生，当事件发生时(条件变量被唤醒)，所有的线程可以一起恢复执行。")])])]),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),n("p",[t._v("下文参考自："),n("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzI1NTE3OTk4Nw==&mid=2653734974&idx=1&sn=987f9a4cfea1c830036ae20fc04866d5&chksm=f1e18582c6960c941a5e147c198d9cbc3f27e88dbb82fb62f0d23261821070bd43bdfd2fc2b2&mpshare=1&scene=23&srcid=0728Ab0PK8WsIZWsv1UoVm8L&sharer_sharetime=1595948760667&sharer_shareid=7d02bdfe8ee477ab2b773f2df63f3163#rd",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),n("OutboundLink")],1)]),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),n("p",[t._v("1、使用线程池可以减少创建和销毁线程的次数，每个工作线程都可以重复使用。\n2、可以根据系统的承受能力，调整线程池中工作线程的数量，防止因为消耗过多内存导致服务器崩溃。")]),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._m(53),t._v(" "),n("blockquote",[n("p",[t._v("维基百科："),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E4%B8%8A%E4%B8%8B%E6%96%87%E4%BA%A4%E6%8F%9B",target:"_blank",rel:"noopener noreferrer"}},[t._v("上下文切换"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("知乎："),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/52845869",target:"_blank",rel:"noopener noreferrer"}},[t._v("上下文切换"),n("OutboundLink")],1)])]),t._v(" "),t._m(54),t._v(" "),n("ul",[n("li",[n("p",[t._v("在中国大陆被翻译为"),n("strong",[t._v("页表缓存")]),t._v("、"),n("strong",[t._v("转址旁路缓存")]),t._v("，为"),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%A4%AE%E8%99%95%E7%90%86%E5%99%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("CPU"),n("OutboundLink")],1),t._v("的一种缓存，由"),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%8D%95%E5%85%83",target:"_blank",rel:"noopener noreferrer"}},[t._v("存储器管理单元"),n("OutboundLink")],1),t._v("用于改进"),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%99%9B%E6%93%AC%E4%BD%8D%E5%9D%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("虚拟地址"),n("OutboundLink")],1),t._v("到物理地址的转译速度")])]),t._v(" "),t._m(55)]),t._v(" "),n("blockquote",[n("p",[t._v("知乎："),n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/108425561",target:"_blank",rel:"noopener noreferrer"}},[t._v("TLB原理"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("维基百科："),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%BD%89%E8%AD%AF%E5%BE%8C%E5%82%99%E7%B7%A9%E8%A1%9D%E5%8D%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("TLB原理"),n("OutboundLink")],1)])]),t._v(" "),t._m(56),t._v(" "),t._m(57),n("blockquote",[n("p",[t._v("维基百科："),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/CPU%E5%AF%86%E9%9B%86%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"}},[t._v("CPU密集型"),n("OutboundLink")],1)])]),t._v(" "),t._m(58),t._v(" "),t._m(59),t._v(" "),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._m(63),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),n("p",[t._v("1、『"),n("strong",[t._v("有的书上叫“作业”")]),t._v("，重要！』只不过"),n("font",{staticStyle:{background:"yellow"}},[t._v("在不同操作系统下，叫法不同而已。")]),n("br"),t._v("\n2、作业这个概念，早先的时候，来源于BSD操作系统")],1),t._v(" "),t._m(67),t._v(" "),n("p",[t._v("可以用kill，进行进程组ID取负号的方式，来杀死整个组内的进程。")]),t._v(" "),t._m(68),t._v(" "),t._m(69),t._v(" "),n("ul",[n("li",[t._v("会话（session）：把"),n("font",{staticStyle:{background:"yellow"}},[t._v("一组『"),n("strong",[t._v("进程组")]),t._v("』再重新编号")]),t._v("，就变成了会话。。。（圈圈圆圆圈圈，禁止套娃2333）")],1)]),t._v(" "),t._m(70),t._v(" "),t._m(71),t._v(" "),t._m(72),t._v(" "),n("p",[t._v("A：主要是为了，守护进程用")]),t._v(" "),t._m(73),t._v(" "),t._m(74),t._v(" "),n("p",[t._v("参考"),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%83%B5%E5%B0%B8%E8%BF%9B%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"}},[t._v("wiki"),n("OutboundLink")],1)]),t._v(" "),t._m(75),t._m(76),t._v(" "),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._v(" "),t._m(80),t._v(" "),t._m(81),t._v(" "),t._m(82),t._v(" "),t._m(83),t._v(" "),t._m(84),t._v(" "),t._m(85),t._v(" "),t._m(86),t._v(" "),n("ul",[t._m(87),t._v(" "),n("li",[n("p",[t._v("当然，你也可以写这样的守护进程，比")]),t._v(" "),t._m(88),n("p",[t._v("这是bash解析器的配置文件，每次加载bash的时候都是按照这个去走。\n显然设置这个，就可以让完成那样的守护进程。启动放这个里面。")]),t._v(" "),n("p",[t._v("为什么，要用会话呢？\n"),n("font",{staticStyle:{background:"yellow"}},[t._v("因为守护进程都不需要控制终端。")])],1)])]),t._v(" "),t._m(89),t._v(" "),t._m(90),t._v(" "),t._m(91),t._v(" "),t._m(92),t._m(93),t._v(" "),t._m(94),t._v(" "),n("ul",[n("li",[t._v("《Linux，鸟哥的私房菜》")]),t._v(" "),n("li",[t._v("张小方Blog，"),n("a",{attrs:{href:"http://balloonwj.gitee.io/cpp-guide-web/",target:"_blank",rel:"noopener noreferrer"}},[t._v("高性能服务器开发"),n("OutboundLink")],1)])])])}),[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"os概念辨析与实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#os概念辨析与实践"}},[this._v("#")]),this._v(" OS概念辨析与实践")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"⭐️-图表记忆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️-图表记忆"}},[this._v("#")]),this._v(" ⭐️ 图表记忆")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"⏰『进程』和『线程』中对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⏰『进程』和『线程』中对比"}},[this._v("#")]),this._v(" ⏰『进程』和『线程』中对比")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("strong",[this._v("进程")]),this._v("是"),s("strong",[this._v("资源管理")]),this._v("的最小单位")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("strong",[this._v("线程")]),this._v("是"),s("strong",[this._v("程序执行")]),this._v("的最小单位『前提是支持线程』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️进程和线程在两大os的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️进程和线程在两大os的特点"}},[this._v("#")]),this._v(" ⭐️进程和线程在两大OS的特点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Windows对进程和线程的实现如同『教科书』一般标准。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("Linux内核中"),s("b",[this._v("并不存在真正意义上")]),this._v("的"),s("b",[this._v("线程")]),this._v("的概念")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Linux将所有的执行实体（无论是进程还是线程）都称为『『任务（Task）』』\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 每个Task概念上都类似于一个单线程的进程，具有内存空间、执行实体、文件资源等。\n    \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 不过"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Linux下『不同的Task（任务）之间可以选择共享内存空间』，因而在实际意义上，共享了同一个内存空间的多个任务构成了一个进程， 这些任务也就成了这个进程里的线程。\n    \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Linux下的线程『本质』上用进程实现『牛客题目』\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"🥇进程同步『7侠传』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🥇进程同步『7侠传』"}},[this._v("#")]),this._v(" 🥇进程同步『7侠传』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("保证2点：进程同步、数据交换")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️1、管道（pipe）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️1、管道（pipe）"}},[this._v("#")]),this._v(" ⭐️1、管道（PIPE）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("有名管道")]),this._v(" "),s("li",[this._v("无名管道")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️2、信号量（semaphore）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️2、信号量（semaphore）"}},[this._v("#")]),this._v(" ⭐️2、信号量（Semaphore）")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sem_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" pshared"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sem_destroy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sem_wait")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sem_post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sem_getvalue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("valp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️3、信号（signal）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️3、信号（signal）"}},[this._v("#")]),this._v(" ⭐️3、信号（Signal）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️4、消息队列（message-queue，mq）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️4、消息队列（message-queue，mq）"}},[this._v("#")]),this._v(" ⭐️4、消息队列（Message Queue，MQ）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️5、共享内存（shared-memory）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️5、共享内存（shared-memory）"}},[this._v("#")]),this._v(" ⭐️5、共享内存（Shared Memory）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️6、套接字（socket）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️6、套接字（socket）"}},[this._v("#")]),this._v(" ⭐️6、套接字（Socket）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️7、比如c语言中，新建文件『已经被弃用』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️7、比如c语言中，新建文件『已经被弃用』"}},[this._v("#")]),this._v(" ⭐️7、比如C语言中，新建文件『已经被弃用』")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"🥇线程同步技术『4大天王』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🥇线程同步技术『4大天王』"}},[this._v("#")]),this._v(" 🥇线程同步技术『4大天王』")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pthread_attr_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("attr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("start_routine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_t thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("retval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npthread_t "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("保证1点：线程同步")]),this._v(" "),s("li",[this._v("Tips：线程由于，已经共享内存空间了，所以，没有必要『数据交换』，也就不需要。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️1、锁机制（包括下面4种）lock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️1、锁机制（包括下面4种）lock"}},[this._v("#")]),this._v(" ⭐️1、锁机制（包括下面4种）Lock")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("互斥量/锁（mutex）/互斥体")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_mutex_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_mutex_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mutex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pthread_mutexattr_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mutexattr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_mutex_destroy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_mutex_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mutex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_mutex_lock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_mutex_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mutex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_mutex_trylock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_mutex_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mutex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_mutex_unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_mutex_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mutex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("读写锁（reader-writer lock）")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_rwlock_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_rwlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("restrict rwlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pthread_rwlockattr_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("restrict attr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("int "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_rwlock_destroy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_rwlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rwlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("int "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_rwlock_rdlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_rwlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rwlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("int "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_rwlock_tryrdlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_rwlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rwlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("int "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_rwlock_wrlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_rwlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rwlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("int "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_rwlock_trywrlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_rwlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rwlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("int "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_rwlock_unlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_rwlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rwlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这两个函数在Linux和Mac的man文档里都没有，新版的pthread.h里面也没有，旧版的能找到")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("int "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_rwlock_timedrdlock_np")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_rwlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rwlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("timespec")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("deltatime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("int "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_rwlock_timedwrlock_np")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_rwlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("rwlock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("timespec")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("deltatime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("自旋锁（spin lock）")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_spin_init")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__pthread_spinlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("__lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" __pshared"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_spin_destroy")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__pthread_spinlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("__lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_spin_trylock")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__pthread_spinlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("__lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_spin_unlock")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__pthread_spinlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("__lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_spin_lock")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__pthread_spinlock_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("__lock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("strong",[this._v("条件变量")]),this._v("（condition）")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_cond_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_cond_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("restrict cond"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pthread_condattr_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("restrict attr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_cond_destroy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_cond_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cond"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_cond_signal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_cond_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cond"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_cond_broadcast")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_cond_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cond"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_cond_wait")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_cond_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("restrict cond"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pthread_mutex_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("restrict mutex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pthread_cond_timedwait")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pthread_cond_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("restrict cond"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pthread_mutex_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("restrict mutex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("timespec")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("restrict abstime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️2、信号量机制（semaphore）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️2、信号量机制（semaphore）"}},[this._v("#")]),this._v(" ⭐️2、信号量机制（Semaphore）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("无名线程信号量")]),this._v(" "),s("li",[this._v("命名线程信号量")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sem_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" pshared"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sem_destroy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sem_wait")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sem_post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sem_getvalue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sem_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("sem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("valp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️3、信号机制（signal）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️3、信号机制（signal）"}},[this._v("#")]),this._v(" ⭐️3、信号机制（Signal）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"⭐️4、屏障（barrier）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#⭐️4、屏障（barrier）"}},[this._v("#")]),this._v(" ⭐️4、屏障（barrier）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("下面的说法来自《程序员的自我修养，编码链接和库》，感觉分类不正确")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"同步的各种锁："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步的各种锁："}},[this._v("#")]),this._v(" 同步的各种锁：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("对于"),s("b",[this._v("允许多个线程并发访问")]),this._v("的资源，"),s("b",[this._v("多元信号量简称信号量(Semaphore)")]),this._v(",它是一个很好的选择。一个初始值为N的信号量允许N个线程并发访问。线程访问资源的时候首先获取信号量，进行如下操作:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("2）"),s("b",[this._v("互斥量")]),this._v("则要求哪个线程获取了互斥量，哪个线程就要负责释放这个锁，其他线程越俎代庖去释放互斥量是无效的。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("blockquote",[a("ul",[a("li",[t._v("由来：对于一段数据，多个线程同时读取总是没有问题的，但假设操作都不是原子型，只要有任何一个线程试图对这个数据进行修改，就必须使用同步手段来避免出错。如果我们使用上述信号量、互斥量或临界区中的任何一种来进行同步，尽管可以保证程序正确，但"),a("b",[t._v("对于读取频繁，而仅仅偶尔写入的情况")]),t._v("，会显得非常低效。")]),t._v(" "),a("li",[t._v("读写锁(Read-Write Lock)致力于一种更加特定的场合的同步:"),a("b",[t._v("读取频繁，偶尔写入的情况")])]),t._v(" "),a("li",[t._v("读写锁可以避免这个问题。对于同一个锁，读写锁有两种获取方式，"),a("b",[t._v("共享的(Shared)")]),t._v("或"),a("b",[t._v("独占(Exclusive)")]),t._v("。")]),t._v(" "),a("li",[t._v("当锁处于自由的状态时，试图以任何一种方式获取锁都能成功，并将锁置于对应的状态。")]),t._v(" "),a("li",[t._v("如果锁处于共享状态，其他线程以共享的方式获取锁仍然会成功，此时这个锁分配给了多个线程。然而，如果其他线程试图以独身的方式获取已经处于共享状态的锁，那么它将必须等待锁被所有的线程释放。")]),t._v(" "),a("li",[t._v("相应地，处于独占状态的锁将阻止任何其他线程获取该锁，不论它们试图以哪种方式获取。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"🍉『后台开发』概念辨析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🍉『后台开发』概念辨析"}},[this._v("#")]),this._v(" 🍉『后台开发』概念辨析")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（0）synchronization（同步）和异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（0）synchronization（同步）和异步"}},[this._v("#")]),this._v(" （0）Synchronization（同步）和异步")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（1）阻塞和非阻塞和轮询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）阻塞和非阻塞和轮询"}},[this._v("#")]),this._v(" （1）阻塞和非阻塞和轮询")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（2）xx池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（2）xx池"}},[this._v("#")]),this._v(" （2）XX池")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"线程池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程池"}},[this._v("#")]),this._v(" 线程池")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"（1）什么是线程池？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）什么是线程池？"}},[this._v("#")]),this._v(" （1）什么是线程池？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("实际开发中我们需要让程序执行某个特定任务时，就会开启一个线程，如果并发的线程数量太多，频繁地创建线程就会严重影响系统的运行效率。"),s("br"),this._v("\n如何解决上述为呢？有没有一种方式可以让线程得到复用？"),s("br"),this._v("\n也就是要求执行一次任务之后不被销毁，可以继续执行其他任务，这就跟“数据库连接池”的思路一样了，数据库连接池的实现逻辑是在缓冲池中预先放置一定数量的连接对象，然后进行复用，那么很显然，在缓冲池中"),s("b",[this._v("预先放置一定数量的线程对象")]),this._v("以实现复用的机制就叫做线程池。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"（2）线程池的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（2）线程池的优点"}},[this._v("#")]),this._v(" （2）线程池的优点")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（3）上下文切换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（3）上下文切换"}},[this._v("#")]),this._v(" （3）上下文切换")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("定义："),a("strong",[t._v("上下文切换")]),t._v("(英语：context switch)，又称"),a("strong",[t._v("环境切换")]),t._v("，电脑术语，是一个"),a("strong",[t._v("存储")]),t._v("和"),a("strong",[t._v("重建")]),t._v("CPU的"),a("strong",[t._v("状态")]),t._v(" ("),a("strong",[t._v("内文")]),t._v(")，因此令多个进程(process)可以分享单一CPU资源的计算过程。要切换CPU上的进程时，必需先行存储目前进程的状态，再将欲运行的进程之状态读回CPU中。")]),t._v(" "),a("li",[t._v("开销：上下文切换通常是『"),a("strong",[t._v("计算密集型")]),t._v("』的，『"),a("strong",[t._v("操作系统中的许多设计都是针对上下文切换的优化")]),t._v("』。在进程间切换需要消耗一定的时间进行相关的管理工作——包括寄存器和内存映射的保存与读取、更新各种内部的表等等。处理器或者操作系统不同，上下文切换时所涉及的内容也不尽相同。比如在Linux内核中，上下文切换需要涉及寄存器、栈指针、程序计数器的切换，但和地址空间的切换无关（虽然进程在进行上下文切换时也需要做地址空间的切换）[2][3]。用户态线程之间也会发生类似的上下文切换，但这样的切换非常轻量。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("『CPU 寄存器』和『程序计数器』就是 CPU 上下文，因为它们都是 CPU 在运行任何任务前，必须的依赖环境。\n\nCPU 寄存器是 CPU 内置的容量小、但速度极快的内存。『这是个比方，不是真实的』\n程序计数器则是用来存储 CPU 正在执行的指令位置、或者即将执行的下一条指令位置。\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br"),s("span",{staticClass:"line-number"},[this._v("4")]),s("br")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("p",[t._v("根据 Tsuna 的测试报告，每次上下文切换都需要『"),a("strong",[t._v("几十ns到数us")]),t._v("』的 CPU 时间。这个时间还是相当可观的，特别是在进程上下文切换次数较多的情况下，很容易导致 CPU 将大量时间耗费在寄存器、内核栈以及虚拟内存等资源的保存和恢复上，进而大大缩短了真正运行进程的时间。这也正是导致平均负载升高的一个重要因素。")]),t._v(" "),a("p",[t._v("另外，我们知道， Linux 通过 "),a("strong",[t._v("TLB（Translation Lookaside Buffer）"),a("strong",[t._v("来管理虚拟内存到物理内存的映射关系。当虚拟内存更新后，T")]),t._v("LB 也需要刷新，内存的访问也会随之变慢『因为命中的原因』")]),t._v("。特别是在多处理器系统上，缓存是被多个处理器共享的，刷新缓存不仅会影响当前处理器的进程，还会影响共享缓存的其他处理器的进程。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（4）tlb（translation-lookaside-buffer，转译后备缓冲器-页表缓存）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（4）tlb（translation-lookaside-buffer，转译后备缓冲器-页表缓存）"}},[this._v("#")]),this._v(" （4）TLB（Translation Lookaside Buffer，"),s("strong",[this._v("转译后备缓冲器")]),this._v("/页表缓存）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("『进程』切换期间，TLB会被刷新，从而使内存访问在一段时间内变得更加昂贵。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（5）cpu密集型和i-o密集型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（5）cpu密集型和i-o密集型"}},[this._v("#")]),this._v(" （5）CPU密集型和I/O密集型")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("CPU密集型也叫计算密集型，英文为CPU-bound，直译为CPU『受限』型。\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（6）线程和进程基于上面对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（6）线程和进程基于上面对比"}},[this._v("#")]),this._v(" （6）线程和进程基于上面对比")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("多进程模型，适用于：CPU密集型")]),t._v(" "),a("li",[t._v("多线程模型，主要优势为：线程间切换代价较少，因此适用于I/O密集型的工作场景。")]),t._v(" "),a("li",[t._v("『因此，I/O密集型的工作场景经常会由于"),a("strong",[t._v("I/O阻塞")]),t._v("导致"),a("strong",[t._v("频繁的切换线程")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（7）终端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（7）终端"}},[this._v("#")]),this._v(" （7）终端")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("计算机中的终端：是所有"),s("strong",[this._v("输入输出")]),this._v("设备的『总称』。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("键盘，鼠标，摄像头\n屏幕，打印机 \t\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("虚拟机那个黑框框。是终端，是『"),s("strong",[this._v("虚拟终端")]),this._v("』，不是真实存在的"),s("br"),this._v("\n输入可以在这，输出也在这出，又输入有输出")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("终端在我们系统的级别分，大致如下：")]),t._v(" "),a("li",[t._v("1、Alt + Ctrl + F1、F2、F3、F4、F5、F6\t"),a("strong",[t._v("字符终端")]),t._v("   pts (pseudo terminal slave) 指伪终端。")]),t._v(" "),a("li",[t._v("2、Alt + F7\t\t"),a("strong",[t._v("图形终端")])]),t._v(" "),a("li",[t._v("3、ssh、telnet...\t\t"),a("strong",[t._v("网络终端")]),t._v("（比如用Xshell啥的，通过网络传输到主机上）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（8）进程组（作业）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（8）进程组（作业）"}},[this._v("#")]),this._v(" （8）进程组（作业）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("一个作业通常包括程序、数据和『操作说明书』3部分。\n每一个进程由PCB、程序和数据集合组成。这说明程序是进程的一部分，是进程的实体。\n因此，一个作业可划分为若干个进程来完成，而每一个进程有其实体————程序和数据集合。\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("BSD于1980年前后向Unix中增加的一个新特性。")]),this._v(" "),s("li",[this._v("代表一个或多个进程的集合。"),s("strong",[this._v("每个进程都属于一个进程组")]),this._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("strong",[this._v("组长进程")]),this._v("可以创建一个进程组")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（9）会话（session）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（9）会话（session）"}},[this._v("#")]),this._v(" （9）会话（session）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("创建一个会话需要注意以下6点"),s("strong",[this._v("注意事项")]),this._v("：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",[a("li",[t._v("调用进程"),a("strong",[t._v("不能")]),t._v("是进程组组长，该进程变成新会话"),a("strong",[t._v("首进程")]),t._v("(session Leader)（简称，“会长”，滑稽）")]),t._v(" "),a("li",[t._v("该进程成为一个新进程组的组长进程。")]),t._v(" "),a("li",[t._v("需有root权限(ubuntu不需要)")]),t._v(" "),a("li",[t._v("新会话丢弃原有的控制终端，该会话没有控制终端（只在后台执行）")]),t._v(" "),a("li",[t._v("该调用进程是组长进程，则出错返回")]),t._v(" "),a("li",[t._v("建立新会话时，先调用fork, 父进程终止，子进程调用setsid")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("Q：要"),s("strong",[this._v("会话ID")]),this._v("干啥？？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"🐾常考概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🐾常考概念"}},[this._v("#")]),this._v(" 🐾常考概念")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（1）僵尸进程（zombie）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（1）僵尸进程（zombie）"}},[this._v("#")]),this._v(" （1）僵尸进程（Zombie）")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("僵尸进程（僵死进程）: 进程终止，父进程尚未回收，子进程残留资源（PCB）存放于内核中，变成僵尸（Zombie）进程。\n\n注意:僵尸进程是不能使用kill命令清除掉的。因为kill命令只是用来终止进程的，而僵尸进程已经终止。\n\n思考！用什么办法可清除掉僵尸进程呢？\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br"),s("span",{staticClass:"line-number"},[this._v("4")]),s("br"),s("span",{staticClass:"line-number"},[this._v("5")]),s("br")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("p",[a("strong",[t._v("僵尸进程")]),t._v(": （死亡的子进程，但不回收）进程终止，父进程尚未回收，子进程残留资源（PCB）存放于"),a("strong",[t._v("内核")]),t._v("中，变成僵尸（Zombie）进程\n（父进程有义务将子进程回收。如果子进程死完之后，要是父进程不给子进程收尸，子进程就成僵尸了）")])]),t._v(" "),a("li",[a("p",[t._v("变成僵尸进程的危害?")])]),t._v(" "),a("li",[a("div",{staticClass:"language-txt line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1、正常进程结束之后，0-3G的进程（用户空间）地址空间，都会被释放。子进程整个0-3G的地址空间都被释放。\n2、但是，唯独PCB残留到内核当中，残留的目的是，为了让父进程给他报仇。因为，子进程死了，不留下点什么痕迹，父进程怎么知道你子进程是怎么死的？？他杀，还是自杀『自行结束』\n3、父进程可以通过PCB来获取它的死亡状态，如果你是自杀，还算了\n4、如果你是他杀，父进程需要采取措施，给你报仇？？？PCB存在的意义是为了，方便父进程收尸，如果父进程比较粗心大意，不管，那么那个PCB就一直存在内核当中。 这样会造成溢出，所以编程的时候，记得要回收僵尸进程\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（2）孤儿进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（2）孤儿进程"}},[this._v("#")]),this._v(" （2）孤儿进程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("strong",[this._v("孤儿进程")]),this._v(": "),s("strong",[this._v("父进程先于子进程结束")]),this._v("，则子进程成为孤儿进程，子进程的父进程成为init进程，称为init进程领养孤儿进程。（操作系统让孤儿进程进入“进程孤儿院”（不对吧）。也就是被init进程收养）（有人叫init进程叫进程孤儿院）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（3）init-进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（3）init-进程"}},[this._v("#")]),this._v(" （3）init 进程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("init进程："),s("strong",[this._v("系统初始化进程")]),this._v("，是所有用户进程和非调度进程的祖先")]),this._v(" "),s("li",[this._v("init进程是『1号进程』，所有进程原先的祖先\n0号进程是『不会』在操作系统中实际存在的。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（4）内核"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（4）内核"}},[this._v("#")]),this._v(" （4）内核")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"（5）守护进程（daemon）『后台开发核心』"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#（5）守护进程（daemon）『后台开发核心』"}},[this._v("#")]),this._v(" （5）守护进程（daemon）『后台开发核心』")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("strong",[t._v("守护进程（daemon进程/精灵进程）")]),t._v("：“系统进程”与终端无关，不由用户启动，通常也叫做守护进程，是Linux/Unix『"),a("strong",[t._v("内核")]),t._v("』专用的特殊进程，是Linux中的"),a("strong",[t._v("后台服务进程")]),t._v("，通常独立于『控制终端』并且周"),a("strong",[t._v("期性地")]),t._v("执行某种任务或等待处理某些发生的事件。一般采用以d结尾的名字。")]),t._v(" "),a("li",[t._v("守护进程，说白了，就是一个后台系统服务器。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("ul",[s("li",[this._v("比如，Linux中的vsftpd，搭建ftp服务器的，安装+启动，，httpd，sshd,xinetd")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("FAQ：只要是后台的，有没有终端？？没有！")]),this._v(" "),s("li",[s("b",[this._v("注意：")]),this._v("守护进程不受用户登录、注销的影响，当然，机器重启就另说了,但是厉害的守护进程，比如vsftpd和mysql等，你关机再开机，它也跟着启动")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_1、创建守护进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、创建守护进程"}},[this._v("#")]),this._v(" 1、创建守护进程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("创建守护进程，最关键的一步是调用setsid函数"),s("strong",[this._v("创建一个新的会话（Session）")]),this._v("，并成为Session Leader。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[this._v("vim")]),this._v(" .bashrc\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_2、创建守护进程模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、创建守护进程模型"}},[this._v("#")]),this._v(" 2、创建守护进程模型")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",[a("li",[t._v("创建子进程，父进程退出\n所有工作在子进程中进行形式上脱离了控制终端")]),t._v(" "),a("li",[t._v("在子进程中创建新会话（主要，为了丢弃终端）\n　　\tsetsid()函数\n　　\t使子进程完全独立出来，脱离控制")]),t._v(" "),a("li",[t._v("改变当前目录为根目录\n　　\tchdir()函数\n　　\t防止占用可卸载的文件系统（比如，U盘）\n　　\t也可以换成其它路径")]),t._v(" "),a("li",[t._v("重设文件权限掩码\n　　\tumask()函数\n　　\t防止继承的文件创建屏蔽字拒绝某些权限\n　　\t增加守护进程灵活性")]),t._v(" "),a("li",[t._v("关闭文件描述符\n　　\t继承的打开文件不会用到，浪费系统资源，无法卸载")]),t._v(" "),a("li",[t._v("开始执行守护进程核心工作（守护进程主逻辑）")]),t._v(" "),a("li",[t._v("守护进程退出处理程序模型\t\t（几乎不会用，毕竟守护进程一般不退出）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"_3、写一个守护进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、写一个守护进程"}},[this._v("#")]),this._v(" 3、写一个守护进程")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdlib.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<fcntl.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<sys/stat.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<unistd.h>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mydaemond")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.创建子进程")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("pid_t")]),t._v(" pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fork")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.在子进程中创建新会话")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setsid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.\t改变当前目录为根目录")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chdir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/itcast/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("perror")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chdir error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// chdir error no such diractroy or file")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4.重设文件权限掩码")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("umask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0022")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5.关闭文件描述符")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//close(fd[0]);  //stdin")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("STDIN_FILENO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/dev/null"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" O_RDWR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dup2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" STDOUT_FILENO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dup2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" STDERR_FILENO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mydaemond")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//6.开始执行守护进程核心工作（守护进程主逻辑）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//7.退出的话，需要在这注册一个信号捕捉")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("比如，我们可以写个这样的守护进程"),s("br"),this._v("\n每隔2秒，把当前系统的时间打印，写到一个文件里面。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[this._v("#")]),this._v(" 参考资料")])}],!1,null,null,null);s.default=e.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{270:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"面试题整理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试题整理"}},[t._v("#")]),t._v(" 面试题整理")]),t._v(" "),a("ul",[a("li",[t._v("需要严肃说明的是:面试题库作为帮助同学准备面试的辅助资料，但是绝对不能作为备考唯一途径")]),t._v(" "),a("li",[t._v("因为面试是一个考察真实水平的，不是背会了答案就可以的，需要你透彻理解的，否则追问问题答不出来反而减分，毕竟技术面试中面试官最痛恨的就是背答案这个事情了。")])]),t._v(" "),a("blockquote",[a("p",[t._v("但是面试中必考的点且占比非常大的有c基础和算法。")]),t._v(" "),a("ul",[a("li",[t._v("决定你是否能拿sp offer（高薪offer）以及是否进名企的是项目和算法。")])])]),t._v(" "),a("h2",{attrs:{id:"目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),a("p",[t._v("[TOC]")]),t._v(" "),a("h2",{attrs:{id:"_01-操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01-操作系统"}},[t._v("#")]),t._v(" 01.操作系统")]),t._v(" "),a("h4",{attrs:{id:"_1、请你说一下进程与线程的概念，以及为什么要有进程线程，其中有什么区别，他们各自又是怎么同步的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、请你说一下进程与线程的概念，以及为什么要有进程线程，其中有什么区别，他们各自又是怎么同步的"}},[t._v("#")]),t._v(" 1、请你说一下进程与线程的概念，以及为什么要有进程线程，其中有什么区别，他们各自又是怎么同步的")]),t._v(" "),a("blockquote",[a("p",[t._v("概念：")])]),t._v(" "),a("ul",[a("li",[t._v("进程是对运行时程序的封装，是系统进行"),a("strong",[t._v("资源调度和分配")]),t._v("的的基本单位，实现了"),a("strong",[t._v("操作系统的并发")]),t._v(";")]),t._v(" "),a("li",[t._v("线程是进程的子任务，是"),a("strong",[t._v("CPU调度和分派")]),t._v("的基本单位，用于保证程序的实时性，实现"),a("strong",[t._v("进程内部的并发")]),t._v(";\n"),a("ul",[a("li",[t._v("线程是操作系统可识别的最小执行和调度单位.每个线程都独自占用一个虚拟处理器:独自的寄存器组，指令计数器和处理器状态。每个线程完成不同的任务，但是共享同一地址空间(也就是同样的动态内存，映射文件，目标代码等等），打开的文件队列和其他内核资源。")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("区别：")])]),t._v(" "),a("p",[t._v("1.一个线程只能属于一个进程，而一个进程可以有多个线程，但至少有一个线程。线程依赖于进程而存在。\n⒉.进程在执行过程中拥有独立的内存单元，而多个线程共享进程的内存。(资源分配给进程，同一进程的所有线程共享该进程的所有资源。同一进程中的多个线程共享代码段（代码和常量),数据段（全局变量和静态变量)，扩展段（堆存储）。但是每个线程拥有自己的栈段，栈段又叫"),a("strong",[t._v("运行时段")]),t._v("，用来存放所有局部变量和临时变量。\n3.进程是资源分配的最小单位，线程是CPU调度的最小单位;\n4.系统开销:")]),t._v(" "),a("ul",[a("li",[t._v("由于在创建或撤消进程时，系统都要为之分配或回收资源，如内存空间、I/ o设备等。因此，操作系统所付出的开销将显著地大于在创建或撤消线程时的开销。类似地，在进行进程切换时,涉及到整个当前进程CPU环境的保存以及新被调度运行的进程的CPU环境的设置。而线程切换只须保存和设置少量寄存器的内容，并不涉及存储器管理方面的操作。可见，进程切换的开销也远大于线程切换的开销。")])]),t._v(" "),a("p",[t._v("5.通信:")]),t._v(" "),a("ul",[a("li",[t._v("由于同一进程中的多个线程具有相同的地址空间，致使它们之间的同步和通信的实现，也变得比较容易。进程间通信IPC，线程间可以直接读写进程数据段（如全局变量〉来进行通信――需要进程同步和互斥手段的辅助，以保证数据的一致性。在"),a("strong",[t._v("有的系统中，线程的切换、同步和通信都无须操作系统内核的干预")])])]),t._v(" "),a("p",[t._v("6.调试：")]),t._v(" "),a("ul",[a("li",[t._v("进程编程调试简单可靠性高，但是创建销毁开销大;线程正相反，开销小，切换速度快，但是编程调试相对复杂。")])]),t._v(" "),a("p",[t._v("7.进程间不会相互影响﹔;线程一个线程挂掉将导致整个进程挂掉")]),t._v(" "),a("p",[t._v("8.进程适应于多核、多机分布;线程适用于多核")]),t._v(" "),a("blockquote",[a("p",[t._v("进程间同步方式：")])]),t._v(" "),a("h2",{attrs:{id:"_02-计算机网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02-计算机网络"}},[t._v("#")]),t._v(" 02.计算机网络")]),t._v(" "),a("p",[t._v("怎么确保节点传输存储的可靠性")]),t._v(" "),a("h2",{attrs:{id:"_03-数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-数据库"}},[t._v("#")]),t._v(" 03.数据库")]),t._v(" "),a("h3",{attrs:{id:"_3-1-redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-redis"}},[t._v("#")]),t._v(" 3.1.Redis")]),t._v(" "),a("h2",{attrs:{id:"_04-数据结构和算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_04-数据结构和算法"}},[t._v("#")]),t._v(" 04.数据结构和算法")]),t._v(" "),a("p",[t._v("堆和栈")]),t._v(" "),a("h4",{attrs:{id:"请说一说你理解的stack-overflow（栈溢出），并且举个例子导致栈溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请说一说你理解的stack-overflow（栈溢出），并且举个例子导致栈溢出"}},[t._v("#")]),t._v(" 请说一说你理解的stack overflow（栈溢出），并且举个例子导致栈溢出")]),t._v(" "),a("ul",[a("li",[t._v("栈溢出：指的是程序向stack中某个变量中写入的字节数超过了这个变量本身所申请的字节数，因而导致stack中与其相邻的变量的值被改变")])]),t._v(" "),a("blockquote",[a("p",[t._v("stack overflow产生的原因是：")])]),t._v(" "),a("ul",[a("li",[t._v("1、局部数据")])]),t._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<string.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcpy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这一行，发生了缓冲区溢出错误，因为『源缓冲区』内容是用户输入的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Input:%s\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h2",{attrs:{id:"_05-设计模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_05-设计模式"}},[t._v("#")]),t._v(" 05.设计模式")])])}],!1,null,null,null);s.default=r.exports}}]);
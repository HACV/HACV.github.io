(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{282:function(s,t,e){"use strict";e.r(t);var a=e(0),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"content"},[s._m(0),s._v(" "),s._m(1),s._v(" "),s._m(2),s._v(" "),s._m(3),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://zh.wikipedia.org/wiki/RAII",target:"_blank",rel:"noopener noreferrer"}},[s._v("维基百科"),e("OutboundLink")],1),s._v("：RAII")]),s._v(" "),e("li",[s._v("为解决资源管理时的"),e("font",{staticStyle:{background:"yellow"}},[s._v("异常安全性")])],1)]),s._v(" "),s._m(4),s._m(5),s._v(" "),e("blockquote",[s._m(6),s._v(" "),e("p",[s._v("参考自："),e("a",{attrs:{href:"https://light-city.club/sc/codingStyleIdioms/pImpl/",target:"_blank",rel:"noopener noreferrer"}},[s._v("C++那些事"),e("OutboundLink")],1)])]),s._v(" "),s._m(7),s._m(8),s._v(" "),s._m(9),e("blockquote",[e("p",[s._v("参考自："),e("a",{attrs:{href:"https://www.cnblogs.com/KillerAery/p/9539705.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("博客园"),e("OutboundLink")],1)])]),s._v(" "),s._m(10),s._v(" "),s._m(11),s._v(" "),s._m(12),s._v(" "),e("ul",[e("li",[s._v("Java不可以！")]),s._v(" "),e("li",[e("font",{staticStyle:{background:"yellow"}},[s._v("C和C++可以")])],1)]),s._v(" "),s._m(13),s._v(" "),e("blockquote",[e("p",[s._v("菜鸟教程，"),e("a",{attrs:{href:"https://www.runoob.com/w3cnote/c-bool-true-false.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("C 语言的布尔类型"),e("OutboundLink")],1),s._v("(true 与 false)")])]),s._v(" "),s._m(14),s._v(" "),s._m(15),s._m(16),s._v(" "),s._m(17),s._m(18),s._v(" "),s._m(19),s._v(" "),s._m(20),s._v(" "),s._m(21),s._v(" "),s._m(22),s._v(" "),s._m(23),s._v(" "),s._m(24),s._v(" "),s._m(25),s._v(" "),e("p",[s._v("类中的数据域使用private修饰为私有变量\n反射也可以访问\n什么是反射访问？？？")]),s._v(" "),s._m(26),s._v(" "),s._m(27),s._v(" "),e("ul",[s._m(28),s._v(" "),e("li",[e("p",[s._v("C和C++中"),e("font",{staticStyle:{background:"yellow"}},[s._v("没有")]),s._v("静态类")],1)])])])}),[function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"✔️语言共性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✔️语言共性"}},[this._v("#")]),this._v(" ✔️语言共性")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"✅01-c-编程风格『惯用法』是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅01-c-编程风格『惯用法』是什么"}},[this._v("#")]),this._v(" ✅01.c++ 编程风格『惯用法』是什么?")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"_1-1-raii-资源获取即初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-raii-资源获取即初始化"}},[this._v("#")]),this._v(" 1.1.RAII(资源获取即初始化)")])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("blockquote",[e("p",[s._v("RAII（资源获取即初始化）『"),e("strong",[s._v("R")]),s._v("esource "),e("strong",[s._v("A")]),s._v("cquisition "),e("strong",[s._v("I")]),s._v("s "),e("strong",[s._v("I")]),s._v("nitialization』")])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"language-txt line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("它是在一些面向对象语言中的一种惯用法。\n\nRAII源于C++\n在Java，C#，D，Ada，Vala和Rust中也有应用\n1984-1989年期间，比雅尼·斯特劳斯特鲁普和安德鲁·柯尼希在设计C++异常时，为解决资源管理时的异常安全性而使用了该用法[1]，后来比雅尼·斯特劳斯特鲁普将其称为RAII[2]。\n\nRAII要求，资源的有效期与持有资源的对象的生命期严格绑定，即由对象的构造函数完成资源的分配（获取），同时由析构函数完成资源的释放。在这种要求下，只要对象能正确地析构，就不会出现资源泄露问题。\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"_1-2-pimpl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-pimpl"}},[this._v("#")]),this._v(" 1.2.pImpl")])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("pImpl（指向实现的指针）『"),t("strong",[this._v("P")]),this._v("ointer to "),t("strong",[this._v("Impl")]),this._v("ementation』，Implementation，实现，实施")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language-txt line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("是一种 C++ 编程技巧\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("它将类的"),t("strong",[this._v("实现细节")]),this._v("从对象表示中移除，放到一个『"),t("strong",[this._v("分离的类")]),this._v("』中，并以一个『"),t("strong",[this._v("不透明的指针")]),this._v("』进行访问。")])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"language-txt line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("优点：\n\t1、减少依赖项（降低耦合性）：其一减少原类不必要的头文件的依赖，加速编译；其二对Impl类进行修改，无需重新编译原类。\n\t2、接口和实现的分离（隐藏了类的实现）：私有成员完全可以隐藏在共有接口之外，给用户一个间接明了的使用接口，尤其适合闭源API设计。\n\t3、可使用惰性分配技术：类的某部分实现可以写成按需分配或者实际使用时再分配，从而节省资源。\n\t\n缺点：\n\t1、每个类需要占用小小额外的指针内存。\n\t\n\t2、每个类每次访问具体实现时都要多一个间接指针操作的开销，并且在使用、阅读和调试上都可能有所不便\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"✔️语言对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✔️语言对比"}},[this._v("#")]),this._v(" ✔️语言对比")])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("纯C")]),this._v(" "),t("li",[this._v("C++")]),this._v(" "),t("li",[this._v("Java")]),this._v(" "),t("li",[this._v("C#")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"✅01-可以将『布尔值』与『整数』进行比较吗-？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅01-可以将『布尔值』与『整数』进行比较吗-？"}},[this._v("#")]),this._v(" ✅01.可以将『布尔值』与『整数』进行比较吗 ？")])},function(){var s=this.$createElement,t=this._self._c||s;return t("blockquote",[t("p",[this._v("关键字区别：")]),this._v(" "),t("ul",[t("li",[t("p",[this._v("Java中布尔值是boolean")])]),this._v(" "),t("li",[t("p",[this._v("C99及以后和C++中是bool")])])])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ul",[e("li",[s._v("C 语言标准(C89) 没有定义布尔类型，如果你使用 true 和 false")]),s._v(" "),e("li",[s._v("C语言并非没有bool类型，而是在C99标准之前没有\n"),e("ul",[e("li",[s._v("『C99标准添加了"),e("code",[s._v("_BOOl")]),s._v("类型，用于表示布尔值』")]),s._v(" "),e("li",[s._v("C语言用值1表示true，值0表示false")]),s._v(" "),e("li",[s._v("参考自：《C Primer Plus》P54")])])])])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n * ISO C Standard:  7.16  Boolean type and values  <stdbool.h>\n */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifndef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[s._v("_STDBOOL_H")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("_STDBOOL_H")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("ifndef")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token expression"}},[s._v("__cplusplus")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("bool")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("_Bool")]),s._v("\t")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//『『看这里』』")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("true")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\t\t")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//『『看这里』』")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("false")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\t\t")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//『『看这里』』")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("else")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* __cplusplus */")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Supporting <stdbool.h> in C++ is a GCC extension.  */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("_Bool")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token expression"}},[s._v("bool")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("bool")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token expression"}},[s._v("bool")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("false")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token expression"}},[s._v("false")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("true")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token expression"}},[s._v("true")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* __cplusplus */")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* Signal that all the definitions are present.  */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("define")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token macro-name"}},[s._v("__bool_true_false_are_defined")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token expression"}},[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")])])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("endif")]),s._v("\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* stdbool.h */")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"✅02-c和c-中的true和false"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅02-c和c-中的true和false"}},[this._v("#")]),this._v(" ✅02.C和C++中的true和false")])},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[s._v("已知有如下的变量定义，那么第二行的表达式的值是多少（）\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" z "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" z"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" y "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" z"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n正确答案"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" D  \nA "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\nB "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nC "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nD "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("1、if和while啥的判断一个int，只要不是0，就认为是true，if( -1 )效果和if(true)一样")]),this._v(" "),t("li",[this._v("2、我们用判断a && b啥得到的true和false如果用int承载却直接对应的是1和0！！！")]),this._v(" "),t("li",[this._v("3、（注意记住上面2点）")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"✅03-内嵌基本数据类型的范围固定吗？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅03-内嵌基本数据类型的范围固定吗？"}},[this._v("#")]),this._v(" ✅03.内嵌基本数据类型的范围固定吗？")])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("Java中内嵌基本数据类型的范围是固定的")]),this._v(" "),t("li",[this._v("C和C++中内嵌基本数据类型的范围是依照『具体实现』")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"✅04-内存泄漏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅04-内存泄漏"}},[this._v("#")]),this._v(" ✅04.内存泄漏")])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("内存泄漏是不仅仅出现在C/C++程序的问题")]),this._v(" "),t("li",[t("strong",[this._v("Java程序也会内存泄漏")]),this._v("！\n"),t("ul",[t("li",[this._v("java是自动管理内存的，但是也会有内存泄露，比如加入HashMap的对象hash值改变了就无法从HashMap中remove，这就造成了内存泄露")])])])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"✅05-反射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅05-反射"}},[this._v("#")]),this._v(" ✅05.反射")])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("C和C++ 本身"),t("strong",[this._v("并不支持")]),this._v("反射")]),this._v(" "),t("li",[this._v("Java 支持反射机制")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h4",{attrs:{id:"访问private"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问private"}},[this._v("#")]),this._v(" 访问private")])},function(){var s=this.$createElement,t=this._self._c||s;return t("ul",[t("li",[this._v("通过类的层面，来取得类中方法")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h3",{attrs:{id:"✅06-静态类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅06-静态类"}},[this._v("#")]),this._v(" ✅06.静态类")])},function(){var s=this.$createElement,t=this._self._c||s;return t("li",[t("p",[this._v("C#和Java中有静态类")])])}],!1,null,null,null);t.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{297:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this.$createElement;this._self._c;return this._m(0)}),[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"c-多态详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-多态详解"}},[s._v("#")]),s._v(" C++多态详解")]),s._v(" "),a("h2",{attrs:{id:"一、虚函数相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、虚函数相关"}},[s._v("#")]),s._v(" 一、虚函数相关")]),s._v(" "),a("ul",[a("li",[s._v("1、（static）静态函数不可以是虚函数")]),s._v(" "),a("li",[s._v("2、（inline）虚函数可以声明为inline，但是编译器不会将其作为inline函数处理")])]),s._v(" "),a("div",{staticClass:"language-cpp line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("a")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inline")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("virtual")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n尽管以上写法是没有语法错误的，并且可以执行，但其实test函数已经不是内联函数了，因为"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inline")]),s._v("只是对编译器的一个建议而已。\n搞清本质就好。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("多态是为了"),a("strong",[s._v("接口")]),s._v("重用，封装和继承是为了代码重用")]),s._v(" "),a("p",[s._v("子类重新定义父类虚函数的方法叫做覆写")])])}],!1,null,null,null);t.default=e.exports}}]);
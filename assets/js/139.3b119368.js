(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{304:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),e("h3",{attrs:{id:"_2）标准——ansi-c、iso-c、c89、c90-（重点）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2）标准——ansi-c、iso-c、c89、c90-（重点）"}},[t._v("#")]),t._v(" 2）标准——ANSI C、ISO C、C89、C90  "),e("font",{attrs:{color:"red",size:"5"}},[t._v("（重点）")])],1),t._v(" "),e("p",[e("font",{attrs:{color:"red",size:"4"}},[t._v("(目前，我们说的"),e("b",[t._v("标准C")]),t._v("指的一般就是ANSI C)")]),t._v("\n典型用书:《C程序设计语言》的"),e("font",{attrs:{color:"red",size:"4"}},[e("b",[t._v("第二版")])])],1),t._v(" "),e("img",{attrs:{src:"/photos/2020.6.03_15/2020_06_06_1.jpg",width:"60%"}}),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),e("p",[t._v("典型的会造成下面情况的发生：")]),t._v(" "),t._m(11),e("p",[t._v("上面的语句，在ANSI C，是不能通过编译的。因为他不支付，编译后会显示：\n[Error] 'for' loop initial declarations are only allowed in C99 or C11 mode\n但是，从C99开始，就可以编译通过了。\ngcc下用这个方式可以指定用C99标准编译：")]),t._v(" "),t._m(12),e("p",[t._v("Tips：")]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("1)另外，事实上，"),e("b",[t._v("不定长数组")]),t._v("的定义早在C的C99标准里就已经被提出，但是"),e("b",[t._v("从来都没在C++标准（C++98、C++03、C++11）里存在过")]),t._v("。因此，"),e("b",[t._v("G++支持不定长数组完全是因为它"),e("font",{attrs:{color:"red",size:"4"}},[t._v("同时支持C99和C++")]),t._v("（对C99标准支持得最好的就是G++了）")],1),t._v("，而VS不怎么支持C99标准那是人尽皆知的，也就理所当然不支持C99的不定长数组了。")]),t._v(" "),t._m(13),t._v(" "),e("li",[t._v("3)大概也是因为如上的原因，所以，"),e("font",{attrs:{color:"red",size:"3"}},[t._v("到目前为止，我们还是认为ANSI C才是标准C")]),t._v("。")],1)])]),t._v(" "),t._m(14),t._v(" "),t._m(15)])}),[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"c语言标准的发展进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c语言标准的发展进程"}},[this._v("#")]),this._v(" C语言标准的发展进程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"一、综述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、综述"}},[this._v("#")]),this._v(" 一、综述")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("本文将讲解C语言各种标准，并且描述其特点。\n用处：帮助在开发中了解编译器支持什么标准，"),s("b",[this._v("更好的分析可能的编译出错原因")]),this._v("，因为，有时候可能因为当前编译器支持的标准不同就会导致编译出错。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"二、各种标准细说"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、各种标准细说"}},[this._v("#")]),this._v(" 二、各种标准细说")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_1）标准——k-r-c"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1）标准——k-r-c"}},[this._v("#")]),this._v(" 1）标准——K&R C")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("ul",[s("li",[this._v("1978年，丹尼斯•里奇（Dennis Ritchie）和布莱恩•柯林汉（Brian Kernighan）合作出版了"),s("b",[this._v("《C程序设计语言》的第一版")]),this._v("。"),s("b",[this._v("书中介绍的C语言标准也被称作“K&R C”")]),this._v("。")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("blockquote",[e("ul",[e("li",[t._v("随着C语言使用得越来越广泛，出现了许多新问题，人们日益强烈地要求对C语言进行标准化。1983年，"),e("b",[t._v("美国国家标准协会（ANSI）")]),t._v("组成了一个委员会，X3J11，为了创立 C 的一套标准。经过漫长而艰苦的过程，该标准于"),e("b",[t._v("1989年")]),t._v("完成，这个版本的语言经常被称作"),e("b",[t._v("ANSI C")]),t._v("，或有时称为"),e("b",[t._v("C89（为了区别C99）")]),t._v("。")]),t._v(" "),e("li",[t._v("在"),e("b",[t._v("1990年")]),t._v("，ANSI C标准（带有"),e("b",[t._v("一些小改动")]),t._v("）被美国国家标准协会（ANSI）采纳为ISO/IEC 9899:1990。这个版本有时候称为"),e("b",[t._v("C90")]),t._v("或者"),e("b",[t._v("ISO C")]),t._v("。")]),t._v(" "),e("li",[t._v("综上，通常情况下，我们不加非常严格的区分，ANSI C、ISO C、C89、C90可以看做是同一种标准。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("传统C语言（K&R C）到 ANSI/ISO标准C语言的"),s("b",[this._v("改进")]),this._v("包括：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("blockquote",[e("ul",[e("li",[t._v("增加了真正的标准库")]),t._v(" "),e("li",[t._v("新的预处理命令与特性")]),t._v(" "),e("li",[t._v("函数原型允许在函数申明中指定参数类型")]),t._v(" "),e("li",[t._v("一些新的关键字，包括 const、volatile 与 signed  宽字符、宽字符串与字节多字符")]),t._v(" "),e("li",[t._v("对约定规则、声明和类型检查的许多小改动与澄清")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"三、标准——c99"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、标准——c99"}},[this._v("#")]),this._v(" 三、标准——C99")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("blockquote",[e("ul",[e("li",[t._v("2000年3月，ANSI 采纳了 ISO/IEC 9899:1999 标准。这个标准通常指C99。")]),t._v(" "),e("li",[t._v("C99新增了一些特性:")])]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("1)"),e("b",[t._v("支持不定长的数组（柔性数组）")]),t._v("，即数组长度可以在运行时决定。")]),t._v(" "),e("li",[t._v("2)变量声明不必放在语句块的开头，for 语句"),e("b",[t._v("提倡写成 for(int i=0;i<100;++i) 的形式")]),t._v("，即i 只在for 语句块内部有效")]),t._v(" "),e("li",[t._v("3)初始化结构的时候允许对特定的元素赋值。")]),t._v(" "),e("li",[t._v("4)允许编译器化简非常数的表达式。")]),t._v(" "),e("li",[t._v("5)"),e("b",[t._v("取消了函数返回类型默认为 int 的规定。")])]),t._v(" "),e("li",[t._v("Tips：但是各个公司对C99的支持所表现出来的兴趣不同。当GCC和其它一些商业编译器支持C99的大部分特性的时候，微软和Borland却似乎对此不感兴趣，他们把更多的精力放在了C++上。")])])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-c"}},[e("code",[e("span",{pre:!0,attrs:{class:"token macro property"}},[e("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),e("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// C99允许在for循环内定义循环变量，而ANSIC C（C89）不允许")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("gcc -std"),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("=")]),this._v("c99 test.c -o test.exe\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[this._v("2)此外，目前没有编译器可以完全实现C99，而且"),s("b",[this._v("为了兼容性，在写C代码时，通常我们不会去用C99标准")]),this._v("，"),s("b",[this._v("编译器也是默认不使用C99")]),this._v("的，因此C语言的书里说不允许这样定义数组，也是可以理解的。而C++ primer里也这么说，那是因为它说的是事实，C++里根本就不支持不定长数组。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"四、标准——c11"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、标准——c11"}},[this._v("#")]),this._v(" 四、标准——C11")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("blockquote",[e("ul",[e("li",[t._v("在2011年12月，ANSI 采纳了 ISO/IEC 9899:2011 标准。这个标准通常即C11，它是C程序语言的最新标准。")]),t._v(" "),e("li",[t._v("与C99相比，C11有这些变化：")])]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("1）对齐处理：alignof(T)返回T的对齐方式，aligned_alloc()以指定字节和对齐方式分配内存，头文件<stdalign.h>定义了这些内容。")]),t._v(" "),e("li",[t._v("2）"),e("em",[t._v("Noreturn："),e("em",[t._v("Noreturn是个函数修饰符，位置在函数返回类型的前面，声明函数无返回值，有点类似于gcc的__attribute")])]),t._v("((noreturn))，后者在声明语句尾部。")]),t._v(" "),e("li",[t._v("3）_Generic：_Generic支持轻量级范型编程，可以把一组具有不同类型而却有相同功能的函数抽象为一个接口。")]),t._v(" "),e("li",[t._v("4）_Static_assert()：_Static_assert()，静态断言，在编译时刻进行，断言表达式必须是在编译时期可以计算的表达式，而普通的assert()在运行时刻断言。")]),t._v(" "),e("li",[t._v("5）安全版本的几个函数：gets_s()取代了gets()，原因是后者这个I/O函数的实际缓冲区大小不确定，以至于发生常见的缓冲区溢出攻击，类似的函数还有其它的。")]),t._v(" "),e("li",[t._v("6）fopen()新模式：fopen()增加了新的创建、打开模式“x”，在文件锁中比较常用。")]),t._v(" "),e("li",[t._v("7）匿名结构体、联合体。")]),t._v(" "),e("li",[t._v("8）多线程：头文件<threads.h>定义了创建和管理线程的函数，新的存储类修饰符_Thread_local限定了变量不能在多线程之间共享。")]),t._v(" "),e("li",[t._v("9）_Atomic类型修饰符和头文件<stdatomic.h>。")]),t._v(" "),e("li",[t._v("10）改进的Unicode支持和头文件<uchar.h>。")]),t._v(" "),e("li",[t._v("11）quick_exit()：又一种终止程序的方式，当exit()失败时用以终止程序。")]),t._v(" "),e("li",[t._v("12）复数宏，浮点数宏。")]),t._v(" "),e("li",[t._v("13）time.h新增timespec结构体，时间单位为纳秒，原来的timeval结构体时间单位为毫秒。")])])])])}],!1,null,null,null);s.default=n.exports}}]);